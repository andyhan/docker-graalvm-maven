# Copyright 2020-2022 by Vegard IT GmbH, Germany, https://vegardit.com
# SPDX-License-Identifier: Apache-2.0
#
# Author: Sebastian Thomschke, Vegard IT GmbH
#
# https://github.com/vegardit/docker-graalvm-maven
#
# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
name: Build

on:
  push:
    branches:
    - '**'
    tags-ignore:
    - '**'
    paths-ignore:
    - '**/*.md'
    - '.github/*.yml'
  schedule:
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows
    - cron: '0 0 * * *'
  pull_request:
  workflow_dispatch:
    # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/
    inputs:
      GRAALVM_VERSION:
        description: 'GraalVM Version'
        required: true
        default: 'latest'

env:
  DOCKER_IMAGE_REPO: vegardit/graalvm-maven
  TRIVY_CACHE_DIR: ~/.trivy/cache
  
jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        include:
        - GRAALVM_VERSION: ${{ github.event.inputs.GRAALVM_VERSION || 'latest' }}
          GRAALVM_JAVA_VERSION: 11
          experimental: false
        - GRAALVM_VERSION: ${{ github.event.inputs.GRAALVM_VERSION || 'latest' }}
          GRAALVM_JAVA_VERSION: 17
          experimental: false
        - GRAALVM_VERSION: dev
          GRAALVM_JAVA_VERSION: 17
          experimental: true
        - GRAALVM_VERSION: dev
          GRAALVM_JAVA_VERSION: 19
          experimental: true

    steps:
    - name: Git Checkout
      uses: actions/checkout@v3 #https://github.com/actions/checkout

    - name: Cache trivy cache
      uses: actions/cache@v3
      with:
        path: ${{ env.TRIVY_CACHE_DIR }}
        # https://github.com/actions/cache/issues/342#issuecomment-673371329
        key: ${{ runner.os }}-trivy-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-trivy-

    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: /tmp/maven-repo
        key: ${{ runner.os }}-mvnrepo-${{ hashFiles('example/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-mvnrepo-

    - name: Configure fast APT repository mirror
      uses: vegardit/fast-apt-mirror.sh@v1

    - name: Install dos2unix
      run: sudo apt-get install --no-install-recommends -y dos2unix

    - name: Build ${{ env.DOCKER_IMAGE_REPO }}:${{ matrix.GRAALVM_VERSION }}-java${{ matrix.GRAALVM_JAVA_VERSION }}
      shell: bash
      env:
        DOCKER_REGISTRY: docker.io
        DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        GRAALVM_VERSION: ${{ matrix.GRAALVM_VERSION }}
        GRAALVM_JAVA_VERSION: ${{ matrix.GRAALVM_JAVA_VERSION }}
        TRIVY_GITHUB_TOKEN: ${{ github.token }}
      run: |
        if [ "$GITHUB_REF" == "refs/heads/main" ]; then
          export DOCKER_PUSH=1
        fi
        echo "$DOCKER_REGISTRY_TOKEN" | docker login -u="$DOCKER_REGISTRY_USERNAME" "$DOCKER_REGISTRY" --password-stdin
        bash build-image.sh

    - name: Test ${{ env.DOCKER_IMAGE_REPO }}:${{ matrix.GRAALVM_VERSION }}-java${{ matrix.GRAALVM_JAVA_VERSION }}
      shell: bash
      run: |
        docker run --rm -t ${{ env.DOCKER_IMAGE_REPO }}:${{ matrix.GRAALVM_VERSION }}-java${{ matrix.GRAALVM_JAVA_VERSION }} /bin/bash -c "
          cd /tmp
          echo 'class HelloWorld { public static void main(String[] args) { System.out.println(\"HelloWorld!\"); }}' > HelloWorld.java
          javac HelloWorld.java

          # test dynamic executable
          native-image HelloWorld
          ./helloworld

          # test static executable
          native-image --static HelloWorld
          ./helloworld
        "

    - name: Test ${{ env.DOCKER_IMAGE_REPO }}:${{ matrix.GRAALVM_VERSION }}-java${{ matrix.GRAALVM_JAVA_VERSION }} via Maven
      shell: bash
      env:
        RUN_IN_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE_REPO }}:${{ matrix.GRAALVM_VERSION }}-java${{ matrix.GRAALVM_JAVA_VERSION }}
      run: |
        bash example/tools/run-in-docker.sh mvn clean package
        bash example/tools/run-in-docker.sh bash -c target/example

    - name: Publish Docker image to GH registry
      run: |
        set -eux

        echo "${{ github.token }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

        image_name="$DOCKER_IMAGE_REPO:${{ matrix.GRAALVM_VERSION }}-java${{ matrix.GRAALVM_JAVA_VERSION }}"
        docker image tag $image_name ghcr.io/$image_name
        docker push ghcr.io/$image_name
